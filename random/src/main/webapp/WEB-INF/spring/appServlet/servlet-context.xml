<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2"/>
	
	</beans:bean>
	
	<context:component-scan base-package="oh.sung.hwan" />
	<!-- tiles 인식을 위한 설정 -->
	<beans:bean id="tilesConfigure" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/spring/appServlet/tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>	
	</beans:bean>
	
<!-- 기본 jsp파일을 직접 뷰로 작성하지 않고 tiles설정을 보면서 뷰를 만들 수 있도록 ViewResolver등록 -->
	<beans:bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
		<beans:property name="order" value="1"></beans:property><!-- 여기에 1로 주면 최 우선순위가 되는 것이다. 이 기능은 가장먼저 타일즈와 일치하는 뷰를 찾아가는
		것을 의미한다. -->
	</beans:bean>
	
	<!-- mybatis설정을 위한 작업! -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="ds"/>
		<beans:property name="configLocation" value="/WEB-INF/spring/appServlet/mybatis-config.xml"/>
	</beans:bean>
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory"/>
	</beans:bean>
	<!-- ======================어노테이션============================== -->
	<context:component-scan base-package="oh" />
	
	<!-- 디비와 연동하기위한 작업 (db라이브러리를 이용해서 연결시켜준다.)-->
	<beans:bean id="ds" class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="jdbc/myspring"/>
		<beans:property name="resourceRef" value="true"/>
	</beans:bean>
	
	<beans:bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
		<beans:constructor-arg name="dataSource" ref="ds"></beans:constructor-arg>
	</beans:bean>
</beans:beans>


